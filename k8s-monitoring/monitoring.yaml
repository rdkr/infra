---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: testing123-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    external-dns.alpha.kubernetes.io/hostname: k8s.rdkr.uk
spec:
  rules:
  - host: k8s.rdkr.uk
    http:
      paths:
      - path: /
        backend:
          serviceName: prometheus-operator-grafana
          servicePort: 80

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: prometheus
#   namespace: monitoring

# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#   name: prometheus
# rules:
# - apiGroups: [""]
#   resources:
#   - nodes
#   - services
#   - endpoints
#   - pods
#   verbs: ["get", "list", "watch"]
# - apiGroups: [""]
#   resources:
#   - configmaps
#   verbs: ["get"]
# - nonResourceURLs: ["/metrics"]
#   verbs: ["get"]

# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: prometheus
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: prometheus
# subjects:
# - kind: ServiceAccount
#   name: prometheus
#   namespace: monitoring

# ---
# apiVersion: monitoring.coreos.com/v1
# kind: Prometheus
# metadata:
#   name: prometheus
#   namespace: monitoring
# spec:
#   serviceAccountName: prometheus
#   resources:
#     requests:
#       memory: 256Mi
#   serviceMonitorSelector:
#     matchExpressions:
#     - {key: app, operator: Exists}


# ---
#   apiVersion: v1
#   kind: Secret
#   metadata:
#     name: sample-grafana-datasource
#     namespace: monitoring
#     labels:
#       grafana_datasource: "1"
#   type: Opaque
#   stringData:
#     datasource.yaml: |
#       apiVersion: 1
#       datasources:
#       - name: Prometheus
#         type: prometheus
#         access: proxy
#         url: http://prometheus-operated:9090
#         version: 1
#         editable: false
